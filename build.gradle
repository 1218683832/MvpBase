apply plugin: 'com.android.library'

android {
    compileSdkVersion rootProject.ext.android.compileSdkVersion //编译的SDK版本
    buildToolsVersion rootProject.ext.android.buildToolsVersion //编译的Tools版本

    defaultConfig {
        minSdkVersion rootProject.ext.android.minSdkVersion //支持的最低版本
        targetSdkVersion rootProject.ext.android.targetSdkVersion //支持的目标版本
        versionCode rootProject.ext.android.versionCode //版本号
        versionName rootProject.ext.android.versionName //版本名
        multiDexEnabled rootProject.ext.android.multiDexEnabled //multiDex突破超过65535方法数
        archivesBaseName = "mvpbase-$versionName"//指定打包成Jar文件时候的文件名称
        testInstrumentationRunner "android.support.test.runner.AndroidJUnitRunner"

        /**
         * butter knife报错
         * https://www.cnblogs.com/shmilyGWT/p/7833571.html
         */
        javaCompileOptions { annotationProcessorOptions { includeCompileClasspath = true } }
    }

    buildTypes {//build类型,除了默认的构建版本，还可以创建自己的构建版本
        release {//release版本的配置
            zipAlignEnabled true//是否支持zip
            //shrinkResources true//移除无用的resource文件
            minifyEnabled true//混淆开启
            debuggable false//是否支持调试
            jniDebuggable false//关闭jni调试
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
            //指定混淆规则文件
            //signingConfig signingConfigs.release//设置签名信息
        }
        debug {//调试
            zipAlignEnabled true
            //shrinkResources true
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
            debuggable true
            jniDebuggable true
            //signingConfig signingConfigs.release//设置签名信息
        }
    }

    lintOptions {//程序在编译的时候会检查lint，有任何错误提示会停止build，我们可以关闭这个开关
        abortOnError false//lint时候终止错误上报,防止编译的时候莫名的失败
        checkReleaseBuilds false//打包release版本的时候进行检测
    }

    // Butterknife requires Java 8.
    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }
}

dependencies {
    api project(path: ':AndroidBase')
    implementation fileTree(include: ['*.jar'], dir: 'libs')//编译lib目录下的.jar文件
    implementation('com.android.support.test.espresso:espresso-core:2.2.2', {
        exclude group: 'com.android.support', module: 'support-annotations'
    })
    /**
     * 配置android-apt
     */
    annotationProcessor rootProject.ext.annotationProcessors.androidPlugin
    implementation rootProject.ext.dependencies.appcompatV7
    implementation rootProject.ext.dependencies.supportV4
    implementation rootProject.ext.dependencies.recyclerviewV7
    implementation rootProject.ext.dependencies.design
    implementation rootProject.ext.dependencies.cardviewV7
    implementation rootProject.ext.dependencies.constraintLayout
    testImplementation rootProject.ext.dependencies.junit
    /**
     * MVP模式+Retrofit1+OkHttp+Gson2.0+Dagger2
     */
    api rootProject.ext.dependencies.retrofit2
    api rootProject.ext.dependencies.rxjava3
    api rootProject.ext.dependencies.rxandroid2
    api rootProject.ext.dependencies.retrofit2adapter
    api rootProject.ext.dependencies.retrofit2gson
    //api rootProject.ext.dependencies.rxcache
    //api rootProject.ext.dependencies.rxcacheJolyglotGson
    //api rootProject.ext.dependencies.gson2
    //api rootProject.ext.dependencies.okhttp3//// 由于retrofit2内部已经集成okhttp3,所以不需要再依赖Okhttp了
    api rootProject.ext.dependencies.dagger2
    annotationProcessor rootProject.ext.dependencies.dagger2Compiler
    // 使用apt build dagger-compiler编译器
    /**
     * 配置javax.annotation包
     */
    api rootProject.ext.dependencies.javaxAannotation
    implementation 'com.android.support:support-annotations:28.0.0'// 必须配置，缺少javax.annotation包

    /**
     * MVP模式:Retrofit2+OkHttp3+Gson
     */
    api rootProject.ext.dependencies.retrofit2
    // compile rootProject.ext.dependencies.okHttp3 // 由于retrofit2内部已经集成okhttp3,所以不需要再依赖Okhttp了
    api rootProject.ext.dependencies.converterGson
    api rootProject.ext.dependencies.loggingInterceptor
    api rootProject.ext.dependencies.rxjava2Adapter
    // api rootProject.ext.dependencies.rxjava2
    // api rootProject.ext.dependencies.rxandroid2
}
